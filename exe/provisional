#!/usr/bin/env ruby

require "bundler/setup"
require "provisional"
require "gli"


include GLI::App
subcommand_option_handling :normal
arguments :strict


program_desc "Manage and provision server images"
version Provisional::VERSION


desc "Configuration file"
flag [:c, :"config-file"], default_value: Provisional::CONFIG_FILE


desc "Create a Provisional config file for your project"
command :init do |init|
  init.action do |global_options|
    Provisional::Init.new(global_options).run
  end
end


desc "Work with server images"
command :image do |image|
  image.desc "List images"
  image.command :list do |image_list|
    image_list.action do |global_options, options, args|
      Provisional::ImageOperations.new(global_options.merge(options)).list
    end
  end

  image.desc "Build an image, based on another image, plus files and scripts"
  image.arg "image_name"
  image.command :build do |image_build|
    image_build.action do |global_options, options, args|
      image_name = args.first
      Provisional::ImageOperations.new(global_options.merge(options)).build(image_name)
    end
  end
end


desc "Deploy servers to a given environment"
arg_name "environment"
command :deploy do |deploy|
  deploy.switch "cold", desc: "Perform a cold deploy, deploying all server types"
  deploy.action do |global_options, options, args|
    environment = args[0]
    options = global_options.merge(options)
    if options[:cold]
      Provisional::Deployment.new(environment, options).deploy_cold
    else
      #Provisional::Deployment.new(environment, options).deploy_warm
    end
  end
end


exit run(ARGV)
